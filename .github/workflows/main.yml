# This is a basic workflow to help you get started with Actions

name: Deploy to Heroku (Production)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # Deployment action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'ogyh-backend' # Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          dontautocreate: true
          docker_build_args: |
            MONGODB_URL=${{secrets.MONGODB_URL}}
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Generate coverage report
        run: |
          pip install -r requirements.txt
          coverage run -m unittest
          coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          env_vars: OS, PYTHON
          fail_ci_if_error: false
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
